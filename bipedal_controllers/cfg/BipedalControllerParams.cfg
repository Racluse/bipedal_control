#! /usr/bin/env python3

PACKAGE = 'bipedal_controllers'
import roslib

roslib.load_manifest(PACKAGE)

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()
group_wbc = gen.add_group("WholeBodyControllerParams", type="tab")
group_lowlevel = gen.add_group("LowLevelControllerParams", type="tab")

group_wbc : ParameterGenerator
group_lowlevel : ParameterGenerator

# PD gains for the base accel task

group_wbc.add("base_position_x_kp", paramtype=double_t, level=1, description="P Gain for x in base accel task", 
              default=0.0, min=0.0, max=500.0)
group_wbc.add("base_position_x_kd", paramtype=double_t, level=1, description="D Gain for x in base accel task",
                default=0.0, min=0.0, max=100.0)

group_wbc.add("base_position_y_kp", paramtype=double_t, level=1, description="P Gain for y in base accel task", 
              default=0.0, min=0.0, max=500.0)
group_wbc.add("base_position_y_kd", paramtype=double_t, level=1, description="D Gain for y in base accel task",
                default=0.0, min=0.0, max=100.0)

group_wbc.add("base_position_z_kp", paramtype=double_t, level=1, description="P Gain for z in base accel task",
                default=20.0, min=0.0, max=500.0)
group_wbc.add("base_position_z_kd", paramtype=double_t, level=1, description="D Gain for z in base accel task",
                default=3.0, min=0.0, max=100.0)

group_wbc.add("base_orientation_x_kp", paramtype=double_t, level=1, description="P Gain for x in base orientation task",
                default=20.0, min=0.0, max=500.0)
group_wbc.add("base_orientation_x_kd", paramtype=double_t, level=1, description="D Gain for x in base orientation task",
                default=3.0, min=0.0, max=100.0)

group_wbc.add("base_orientation_y_kp", paramtype=double_t, level=1, description="P Gain for y in base orientation task",
                default=20.0, min=0.0, max=500.0)
group_wbc.add("base_orientation_y_kd", paramtype=double_t, level=1, description="D Gain for y in base orientation task",
                default=3.0, min=0.0, max=100.0)

group_wbc.add("base_orientation_z_kp", paramtype=double_t, level=1, description="P Gain for z in base orientation task",
                default=20.0, min=0.0, max=500.0)
group_wbc.add("base_orientation_z_kd", paramtype=double_t, level=1, description="D Gain for z in base orientation task",
                default=3.0, min=0.0, max=100.0)

# PD gains for the swing leg task
group_wbc.add("swing_kp", paramtype=double_t, level=1, description="P Gain for swing leg task",
                default=160.0, min=0.0, max=500.0)
group_wbc.add("swing_kd", paramtype=double_t, level=1, description="D Gain for swing leg task",
                default=18.0, min=0.0, max=100.0)

# wbc weights
group_wbc.add("swing_leg_weight", paramtype=double_t, level=1, description="Weight for swing leg task",
                default=100.0, min=0.0, max=100.0)
group_wbc.add("base_accel_weight", paramtype=double_t, level=1, description="Weight for base accel task",
                default=1.0, min=0.0, max=100.0)
group_wbc.add("contact_force_weight", paramtype=double_t, level=1, description="Weight for contact force task",
                default=0.1, min=0.0, max=100.0)

# PD gains for low level controllers (motor controller)

group_lowlevel.add("leg_motor_1_kp", paramtype=double_t, level=1, description="P Gain for motor 1",
                default=80.0, min=0.0, max=500.0)
group_lowlevel.add("leg_motor_1_kd", paramtype=double_t, level=1, description="D Gain for motor 1",
                default=5.0, min=0.0, max=100.0)

group_lowlevel.add("leg_motor_2_kp", paramtype=double_t, level=1, description="P Gain for motor 2",
                default=80.0, min=0.0, max=500.0)
group_lowlevel.add("leg_motor_2_kd", paramtype=double_t, level=1, description="D Gain for motor 2",
                default=5.0, min=0.0, max=100.0)

group_lowlevel.add("leg_motor_3_kp", paramtype=double_t, level=1, description="P Gain for motor 3",
                default=80.0, min=0.0, max=500.0)
group_lowlevel.add("leg_motor_3_kd", paramtype=double_t, level=1, description="D Gain for motor 3",
                default=5.0, min=0.0, max=100.0)

group_lowlevel.add("leg_motor_4_kp", paramtype=double_t, level=1, description="P Gain for motor 4",
                default=80.0, min=0.0, max=500.0)
group_lowlevel.add("leg_motor_4_kd", paramtype=double_t, level=1, description="D Gain for motor 4",
                default=5.0, min=0.0, max=100.0)

group_lowlevel.add("leg_motor_5_kp", paramtype=double_t, level=1, description="P Gain for motor 5",
                default=80.0, min=0.0, max=500.0)
group_lowlevel.add("leg_motor_5_kd", paramtype=double_t, level=1, description="D Gain for motor 5",
                default=5.0, min=0.0, max=100.0)

exit(gen.generate(PACKAGE, "bipedal_controllers", "BipedalControllerParams"))

